@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
@import '../node_modules/@mdxeditor/editor/dist/style.css';

@layer components {
  .my-line-highlight span.token {
    @apply bg-neutral-border;
  }

  .prose {
    min-width: 0;

    & code {
      @apply text-secondary-text bg-neutral-bgSubtle px-1;


      &:before,
      &:after {
        content: none;
        @apply text-accent-text;
      }
    }

    & a {
      @apply text-accent-text;
      text-decoration: none;
    }

    & code[data-lexical-text] {
      @apply font-mono;
      font-size: inherit;
      font-weight: inherit;

      &:before,
      &:after {
        content: none;
      }
    }

    /* reset the prose borders */
    & [data-lexical-decorator]>table {
      table-layout: fixed;

      & td {
        vertical-align: middle;
      }

      &>thead,
      &>tfoot,
      &>tbody>tr {
        border: 0;
      }

      & [data-tool-cell] {
        padding: 1px;
        border: 0;
        line-height: 1rem;
        vertical-align: middle;
      }

      &>thead [data-tool-cell]:first-child {
        vertical-align: middle;
      }
    }

    & pre[class*="language-"] {
      overflow-x: auto;
    }

    & pre[class*="language-"],
    & code[class*="language-"] {
      @apply font-mono;
      font-size: inherit;
    }

    & pre[class*="language-"]>code {
      @apply text-sm;
      display: block;

    }

    & [data-editor-type=frontmatter] {
      & table {
        margin: 0;
        font-size: inherit;
        width: auto;

        & thead,
        & tbody,
        & tfoot,
        & tr {
          border: 0;
        }
      }
    }

    & li[role=checkbox] {
      text-indent: 1.2rem;
    }

    & li[role=checkbox]::before {
      transform: translate(6px, 6px);
    }

    & li[role=checkbox]::after {
      transform: translate(6px, 6px) rotate(45deg);
    }
  }

  .api-ref-nav>a {
    @apply mb-3;
    display: block;
  }

  .api-ref-nav a::before {
    @apply rounded-sm border-neutral-text border-[1px] font-mono text-xs;
    content: ' ';
    line-height: 1rem;
    position: relative;
    display: inline-block;
    margin-inline-end: 0.5rem;
    padding: 0 0.15rem;
  }

  .api-ref-nav a[href*='types']::before {
    content: 'T';
  }

  .api-ref-nav a[href*='variables']::before {
    content: 'V';
  }

  .api-ref-nav a[href*='functions']::before {
    content: 'F';
  }

  .api-ref-nav a[href*='interfaces']::before {
    content: 'I';
  }

  .api-ref-nav a[href*='classes']::before {
    content: 'C';
  }

  .api-ref-nav>dl>dd>dl {
    @apply pl-2;
  }

  .api-ref-nav dd dd {
    @apply mb-2;
  }

  .api-ref-nav>dl>dt {
    @apply font-medium;
  }

  .in-page-nav {
    @apply border-l-accent-solid border-dotted border-l-2 pl-4 text-sm sticky top-[94px] w-48;

    p {
      @apply mb-2;

    }

    li ul {
      @apply pl-2;
    }

    li>a {
      @apply block mb-1 text-neutral-text;
    }
  }

  .doc-nav {
    & a:hover {
      @apply text-accent-text;
    }

    & a[data-current=true] {
      @apply text-accent-text cursor-default;

    }
  }

  .doc-content .homepage ul {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
  }

  h2#classes+table,
  h2#functions+table,
  h2#interfaces+table,
  h2#type-aliases+table {

    & td:first-child,
    & tr:first-child {
      width: 50%;
    }
  }

  .feature-overview-popover {
    & a {
      @apply text-accent-text;

      & svg {
        @apply inline;
      }
    }

    & p {
      @apply mb-4;
    }
  }

  a > code {
    text-decoration: none;
    border-bottom: 1px dotted var(--blue9);
  }
}

.full-demo-mdxeditor [role=toolbar] {
  top: 74px;
}

@media (max-width: 768px) {
  .full-demo-mdxeditor [role=toolbar] {
    top: 196px;
  }
}

.full-demo-mdxeditor[class*=popupContainer] {
  z-index: 20;
}
